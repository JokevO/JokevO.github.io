<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>I like programming</description>
    <link>http://localhost:4000//</link>
    <atom:link href="http://localhost:4000//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 11 Oct 2017 22:08:09 +0200</pubDate>
    <lastBuildDate>Wed, 11 Oct 2017 22:08:09 +0200</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Photoshop Script: save image in pieces</title>
        <description>&lt;p&gt;For my personal project, I started with a map of the world in photoshop. This map was 16384x8192. I exported the map at about half the scale to use in unreal. When I wanted to build the project on my phone, I bumped into an issue with it. My phone could only load images that were maximum 2048x2048px.&lt;/p&gt;

&lt;p&gt;To export the map at 2048x2048 would lose too much of the detail. What I did instead, I split up the map (and globe to put the map on) in eight pieces. Now I do iterate on the map quite a lot and it would be a hassle to actually keep seperate photshop files for every piece of the map.&lt;/p&gt;

&lt;p&gt;Instead, I wrote a script that will split the map for me, and save the pieces to the correct location. Here is how I did it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;savePNG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;saveFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//1&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;saveOptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PNGSaveOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  
    &lt;span class=&quot;nx&quot;&gt;saveOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;compression&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// (level of compression 0 .. 9       0 - without compression)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;saveOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;interlaced&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;saveAs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;saveFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;saveOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Extension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LOWERCASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfPieciesHorizontal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfPiecesVertical&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;docwidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//2&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;docheight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//2&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeHorizontal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;docwidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfPieciesHorizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//3&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeVertical&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;docheight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfPiecesVertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//3&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfPieciesHorizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//4&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfPiecesVertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//5&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// array is left, top, right, bottom&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeHorizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeVertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeHorizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeVertical&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeVertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeHorizontal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeHorizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeVertical&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeVertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeHorizontal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeHorizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sizeVertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SelectionType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;REPLACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//6&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// crop&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;savedStateCrop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeHistoryState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//7&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;executeAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charIDToTypeID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Crop'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ActionDescriptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DialogModes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//8&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// save&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;savePNG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:/map&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//9&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeHistoryState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;savedStateCrop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//10&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To start, we get the current height and width of the document &lt;code class=&quot;highlighter-rouge&quot;&gt;(2)&lt;/code&gt;. Depending on how many pieces, we calculate the width and height of each piece &lt;code class=&quot;highlighter-rouge&quot;&gt;(3)&lt;/code&gt;. After that, we loop over all the horizontal pieces we will create &lt;code class=&quot;highlighter-rouge&quot;&gt;(4)&lt;/code&gt;, and immediatly go over the vertical ones &lt;code class=&quot;highlighter-rouge&quot;&gt;(5)&lt;/code&gt;. Now that we know which piece we are currently trying to export, we create a selection of that specific piece &lt;code class=&quot;highlighter-rouge&quot;&gt;(6)&lt;/code&gt;. We remember the current state of the document &lt;code class=&quot;highlighter-rouge&quot;&gt;(7)&lt;/code&gt;, crop the piece &lt;code class=&quot;highlighter-rouge&quot;&gt;(8)&lt;/code&gt; and save it to the correct location &lt;code class=&quot;highlighter-rouge&quot;&gt;(9)&lt;/code&gt;. We save using the function we have used in other scripts before &lt;code class=&quot;highlighter-rouge&quot;&gt;(1)&lt;/code&gt;. Last but not least we restore the state to before the crop happend and do &lt;code class=&quot;highlighter-rouge&quot;&gt;(6 - 10)&lt;/code&gt; over again until all pieces are exported.&lt;/p&gt;
</description>
        <pubDate>Wed, 11 Oct 2017 08:30:00 +0200</pubDate>
        <link>http://localhost:4000//snippets/photoshop/2017/10/11/ps-script-save-image-pieces.html</link>
        <guid isPermaLink="true">http://localhost:4000//snippets/photoshop/2017/10/11/ps-script-save-image-pieces.html</guid>
        
        
        <category>snippets</category>
        
        <category>photoshop</category>
        
      </item>
    
      <item>
        <title>Ruby: manipulate json</title>
        <description>&lt;p&gt;I started a project, which used an existing json file full of data.
Because not all data was necessary, I decided to clean it up and rename some keywords.
Instead of doing that manually, I created a ruby script.&lt;/p&gt;

&lt;p&gt;Here is an example of the input and the prefered output json:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// json we start with&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;Country Name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Christmas Island&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;ISO2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CX&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;ISO3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CXR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;Continent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;Capital&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Flying Fish Cove&quot;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;Country Name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Cocos Islands&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;ISO2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;ISO3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CCK&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;Continent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;Capital&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;West Island&quot;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// the output we are going for&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Christmas Island&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;iso2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CX&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;continent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;capital&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Flying Fish Cove&quot;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Cocos Islands&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;iso2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;continent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;capital&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;West Island&quot;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is the script used for modifying this json file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./input.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#2&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#4&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#5&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Country Name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:iso2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ISO2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:continent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Continent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:capital&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Capital'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#save output to other json file&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./output.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#6&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pretty_generate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#7&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;First, we read the input file &lt;code class=&quot;highlighter-rouge&quot;&gt;(1)&lt;/code&gt; and parse it &lt;code class=&quot;highlighter-rouge&quot;&gt;(2)&lt;/code&gt;. We create an empty array that we will use for storing our new json &lt;code class=&quot;highlighter-rouge&quot;&gt;(3)&lt;/code&gt;. Now we loop over each existing json entry &lt;code class=&quot;highlighter-rouge&quot;&gt;(4)&lt;/code&gt;, create a new object, and fill that object with the information we want to keep &lt;code class=&quot;highlighter-rouge&quot;&gt;(5)&lt;/code&gt;. Once we have looped over all the entries, we are going to save the file as &lt;code class=&quot;highlighter-rouge&quot;&gt;output.json&lt;/code&gt;. To do this, open that file as writable &lt;code class=&quot;highlighter-rouge&quot;&gt;(6)&lt;/code&gt;. If the file does not exist yet, it will automatically be created. For extra readability, we can pretty print the json using the &lt;code class=&quot;highlighter-rouge&quot;&gt;pretty_generate&lt;/code&gt; function &lt;code class=&quot;highlighter-rouge&quot;&gt;(7)&lt;/code&gt;. This will ouput the file as listed above.&lt;/p&gt;

</description>
        <pubDate>Sun, 20 Aug 2017 08:30:00 +0200</pubDate>
        <link>http://localhost:4000//snippets/json/ruby/2017/08/20/ruby-manipulate-json.html</link>
        <guid isPermaLink="true">http://localhost:4000//snippets/json/ruby/2017/08/20/ruby-manipulate-json.html</guid>
        
        
        <category>snippets</category>
        
        <category>json</category>
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Photoshop script: resize and save file</title>
        <description>&lt;p&gt;For my own personal project, I have been working quite a lot with photoshop.
To keep the repetitive tasks to a minimum, I tried to script most of them. One of these is resizing and then saving/overwriting the image as a png to some location. Here is one way to do that:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;savePNG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;saveFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;saveOptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PNGSaveOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  
    &lt;span class=&quot;nx&quot;&gt;saveOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;compression&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// (level of compression 0 .. 9       0 - without compression)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;saveOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;interlaced&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;saveAs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;saveFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;saveOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Extension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LOWERCASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;savedState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeHistoryState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//1&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resizeImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UnitValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;px&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ResampleMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AUTOMATIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//2&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;savePNG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:/image.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//3&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeHistoryState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;savedState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Before manipulating the image in any way, make sure to store the current history state of the image &lt;code class=&quot;highlighter-rouge&quot;&gt;(1)&lt;/code&gt;. This way, you can always go back in history to that point. Then, resize the image to 2000 pixels in width &lt;code class=&quot;highlighter-rouge&quot;&gt;(2)&lt;/code&gt;. Using this method, the aspect ratio will be used for calculating height. After that, the image will be saved to &lt;code class=&quot;highlighter-rouge&quot;&gt;C:/image.png&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;(3)&lt;/code&gt;. This line will call the savePNG function above, saving it as a png with the compression and interlaced options added. To end the script, set the image history (saved in &lt;code class=&quot;highlighter-rouge&quot;&gt;(1)&lt;/code&gt;) to restore the image back to its original size&lt;code class=&quot;highlighter-rouge&quot;&gt;(4)&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Aug 2017 08:30:00 +0200</pubDate>
        <link>http://localhost:4000//snippets/photoshop/2017/08/10/ps-script-save-history.html</link>
        <guid isPermaLink="true">http://localhost:4000//snippets/photoshop/2017/08/10/ps-script-save-history.html</guid>
        
        
        <category>snippets</category>
        
        <category>photoshop</category>
        
      </item>
    
      <item>
        <title>Tasker: weather report</title>
        <description>&lt;p&gt;Instead of using a weather app, I made a &lt;a href=&quot;https://play.google.com/store/apps/details?id=net.dinglisch.android.taskerm&quot;&gt;Tasker&lt;/a&gt; task that will give me a notification with a short weather description twice a day. In the morning the weather of the current day, and in the evening with the weather for the next day.&lt;/p&gt;

&lt;p&gt;Here is how I created the task for the current day.
I used the &lt;a href=&quot;http://api.wunderground.com&quot;&gt;Wunderground&lt;/a&gt; api, I signed up for an api key so I can get that data.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Create a new task called &lt;code class=&quot;highlighter-rouge&quot;&gt;Weather Today&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Add an action &lt;code class=&quot;highlighter-rouge&quot;&gt;Net -&amp;gt; HTTP Get&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Set Server:Port to &lt;code class=&quot;highlighter-rouge&quot;&gt;api.wunderground.com&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Set Path to &lt;code class=&quot;highlighter-rouge&quot;&gt;api/API_KEY/conditions/forecast/q/Belgium/ANTWERP.json&lt;/code&gt;. replace the &lt;code class=&quot;highlighter-rouge&quot;&gt;API_KEY&lt;/code&gt; with the key you created with &lt;a href=&quot;http://api.wunderground.com&quot;&gt;Wunderground&lt;/a&gt;. Replace &lt;code class=&quot;highlighter-rouge&quot;&gt;Belgium&lt;/code&gt; with the country you live in, and &lt;code class=&quot;highlighter-rouge&quot;&gt;ANTWERP&lt;/code&gt; with your current city.&lt;/li&gt;
  &lt;li&gt;Go back to confirm.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In orde to test if this works correctly, you can create an &lt;code class=&quot;highlighter-rouge&quot;&gt;Alert -&amp;gt; Flash&lt;/code&gt; and set &lt;code class=&quot;highlighter-rouge&quot;&gt;%HTTPD&lt;/code&gt; as text. Press Play. If there is output, you know the call is correct.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add a new action &lt;code class=&quot;highlighter-rouge&quot;&gt;Code -&amp;gt; JavaScriptlet&lt;/code&gt; and add this code &lt;code class=&quot;highlighter-rouge&quot;&gt;var weather = JSON.parse(global('HTTPD')).forecast.txt_forecast.forecastday[0].fcttext_metric;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Add a new action &lt;code class=&quot;highlighter-rouge&quot;&gt;Code -&amp;gt; JavaScriptlet&lt;/code&gt; and add this code &lt;code class=&quot;highlighter-rouge&quot;&gt;var title = JSON.parse(global('HTTPD')).forecast.txt_forecast.forecastday[0].title;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Add a new action &lt;code class=&quot;highlighter-rouge&quot;&gt;Code -&amp;gt; JavaScriptlet&lt;/code&gt; and add this code &lt;code class=&quot;highlighter-rouge&quot;&gt;var icon = JSON.parse(global('HTTPD')).forecast.txt_forecast.forecastday[0].icon_url;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Add a new action &lt;code class=&quot;highlighter-rouge&quot;&gt;Code -&amp;gt; JavaScriptlet&lt;/code&gt; and add this code &lt;code class=&quot;highlighter-rouge&quot;&gt;var city =JSON.parse(global('HTTPD')).current_observation.display_location.city;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;I used &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.joaomgcd.autonotification&quot;&gt;AutoNotification&lt;/a&gt; to create the actual notification. When the app is installed, create a new action &lt;code class=&quot;highlighter-rouge&quot;&gt;Plugin -&amp;gt; AutoNotification&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Under Texts, as Title and Title Expanded, set &lt;code class=&quot;highlighter-rouge&quot;&gt;%title&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Under Texts, as Text and Text Expanded, set &lt;code class=&quot;highlighter-rouge&quot;&gt;%weather&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Under Texts, as SubText, set &lt;code class=&quot;highlighter-rouge&quot;&gt;%city&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Under Icons and Images, set &lt;code class=&quot;highlighter-rouge&quot;&gt;%icon&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Press back to confirm.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now the task is complete, we need to create a profile that will trigger the task when we want.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Go to tab &lt;code class=&quot;highlighter-rouge&quot;&gt;PROFILES&lt;/code&gt; and create a new profile &lt;code class=&quot;highlighter-rouge&quot;&gt;Time&lt;/code&gt; and set the time you would like the notification.&lt;/li&gt;
  &lt;li&gt;Choose task &lt;code class=&quot;highlighter-rouge&quot;&gt;Weather Today&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Press back to confirm.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is an example notification:
&lt;img src=&quot;https://raw.github.com/JokevO/JokevO.github.io/master/assets/images/weatherscreen.png&quot; alt=&quot;alt text&quot; title=&quot;Example&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 23 Apr 2017 08:30:00 +0200</pubDate>
        <link>http://localhost:4000//snippets/tasker/android/2017/04/23/tasker-weather-report.html</link>
        <guid isPermaLink="true">http://localhost:4000//snippets/tasker/android/2017/04/23/tasker-weather-report.html</guid>
        
        
        <category>snippets</category>
        
        <category>tasker</category>
        
        <category>android</category>
        
      </item>
    
      <item>
        <title>Tasker: launch app when you plug in headphones</title>
        <description>&lt;p&gt;Another &lt;a href=&quot;https://play.google.com/store/apps/details?id=net.dinglisch.android.taskerm&quot;&gt;Tasker&lt;/a&gt; post, I love how you can automate almost everything you usually have to do manually.
This is a very easy task, but I find it very useful. When I am at work, I listen to &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.noisli.noisli&quot;&gt;Noisli&lt;/a&gt;.
I find this helps me keep my focus, but you can also do this with &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.spotify.music&quot;&gt;Spotify&lt;/a&gt; or any other app.
I listen to this on my phone, but when I have a meeting, I do take my phone with me.&lt;/p&gt;

&lt;p&gt;Therefore I made a task that will launch &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.noisli.noisli&quot;&gt;Noisli&lt;/a&gt; when I plug in my headphones, and kill the app when I unplug them:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Go to the tab &lt;code class=&quot;highlighter-rouge&quot;&gt;TASKS&lt;/code&gt; and add a new one, called &lt;code class=&quot;highlighter-rouge&quot;&gt;Launch Noisli&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Add an action &lt;code class=&quot;highlighter-rouge&quot;&gt;App -&amp;gt; Launch App&lt;/code&gt;, and select the app you want to open.&lt;/li&gt;
  &lt;li&gt;Press back button to confirm.&lt;/li&gt;
  &lt;li&gt;Add another task called &lt;code class=&quot;highlighter-rouge&quot;&gt;Kill Noisli&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Add the action &lt;code class=&quot;highlighter-rouge&quot;&gt;App -&amp;gt; Kill App&lt;/code&gt;, and select the app you want to close when you unplug your headphones.&lt;/li&gt;
  &lt;li&gt;In tab &lt;code class=&quot;highlighter-rouge&quot;&gt;PROFILES&lt;/code&gt;, add a new profile &lt;code class=&quot;highlighter-rouge&quot;&gt;State -&amp;gt; Hardware -&amp;gt; Headset Plugged&lt;/code&gt;. Press back button to confirm.&lt;/li&gt;
  &lt;li&gt;Link task &lt;code class=&quot;highlighter-rouge&quot;&gt;Launch Noisli&lt;/code&gt;. This will launch the app when your headset is plugged in.&lt;/li&gt;
  &lt;li&gt;Long press &lt;code class=&quot;highlighter-rouge&quot;&gt;Launch Noisli&lt;/code&gt; in the profile and press &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Exit Task&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Link &lt;code class=&quot;highlighter-rouge&quot;&gt;Kill Noisli&lt;/code&gt; to the exit task and it will kill the app when you disconnect your headphones.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Mon, 17 Apr 2017 11:18:00 +0200</pubDate>
        <link>http://localhost:4000//snippets/tasker/android/2017/04/17/tasker-launch-app.html</link>
        <guid isPermaLink="true">http://localhost:4000//snippets/tasker/android/2017/04/17/tasker-launch-app.html</guid>
        
        
        <category>snippets</category>
        
        <category>tasker</category>
        
        <category>android</category>
        
      </item>
    
      <item>
        <title>Tasker: automate your android phone</title>
        <description>&lt;p&gt;If there is one app I can definitely recommend when having an android phone, it is &lt;a href=&quot;https://play.google.com/store/apps/details?id=net.dinglisch.android.taskerm&quot;&gt;Tasker&lt;/a&gt;. This app is not free, but well worth the money. When you have to do something on your phone manually over and over, you can just automate it using the app.
It also does not use a lot of battery but will potentially save some.&lt;/p&gt;

&lt;p&gt;One of the most simple things I do to save on battery, is to turn off wifi when I leave home, and turn it back on when at work and vice verca. Also, when I step outside I might want to get into the car and connect with it over Bluetooth. I would have to enable bluetooth when leaving home or work.&lt;/p&gt;

&lt;p&gt;Here is how I automated it using &lt;a href=&quot;https://play.google.com/store/apps/details?id=net.dinglisch.android.taskerm&quot;&gt;Tasker&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;I created a task that will turn on Wifi and turn off Bluetooth:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Open Tasker and in the tab &lt;code class=&quot;highlighter-rouge&quot;&gt;TASKS&lt;/code&gt;, make a new task called &lt;code class=&quot;highlighter-rouge&quot;&gt;At Home/Work&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;In this task add an action &lt;code class=&quot;highlighter-rouge&quot;&gt;Net -&amp;gt; WiFi&lt;/code&gt;, and set &lt;code class=&quot;highlighter-rouge&quot;&gt;Set&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;on&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Press back button to confirm.&lt;/li&gt;
  &lt;li&gt;Add a new action &lt;code class=&quot;highlighter-rouge&quot;&gt;Net -&amp;gt; Bluetooth&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Set&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;off&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Press back button again to confirm task.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then I created a task that will do the oposite:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Open Tasker and make a new task called &lt;code class=&quot;highlighter-rouge&quot;&gt;Leaving Home/Work&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;In this task add an action &lt;code class=&quot;highlighter-rouge&quot;&gt;Net -&amp;gt; WiFi&lt;/code&gt;, and set &lt;code class=&quot;highlighter-rouge&quot;&gt;Set&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;off&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Press back button to confirm.&lt;/li&gt;
  &lt;li&gt;Add a new action &lt;code class=&quot;highlighter-rouge&quot;&gt;Net -&amp;gt; Bluetooth&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Set&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;on&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Press back button again to confirm task.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now we that we have the tasks ready, we just need to make them trigger at the right time.
I will be using location.&lt;/p&gt;

&lt;p&gt;Trigger tasks:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Go to the tab &lt;code class=&quot;highlighter-rouge&quot;&gt;PROFILES&lt;/code&gt; and add a new profile based on location.&lt;/li&gt;
  &lt;li&gt;Either fill in the right lat and lon, or longpress the map and it will put a marker there.
Adjust the radius to 100m and whether or not you want to use gps or just net. I only use &lt;code class=&quot;highlighter-rouge&quot;&gt;Net&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Link your &lt;code class=&quot;highlighter-rouge&quot;&gt;At Home/Work&lt;/code&gt; task to the profile. You see it is linked with &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&lt;/code&gt; icon in profile. This indicates that the task will be triggered when you enter the profile location.&lt;/li&gt;
  &lt;li&gt;Long press the task in profiles and select &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Exit Task&lt;/code&gt; and select the &lt;code class=&quot;highlighter-rouge&quot;&gt;Leaving Home/Work&lt;/code&gt; task. You will see it linked with the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;-&lt;/code&gt; icon. This indicates the task that will be triggered when you exit that location.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Mon, 17 Apr 2017 08:18:00 +0200</pubDate>
        <link>http://localhost:4000//snippets/tasker/android/2017/04/17/tasker-home-work.html</link>
        <guid isPermaLink="true">http://localhost:4000//snippets/tasker/android/2017/04/17/tasker-home-work.html</guid>
        
        
        <category>snippets</category>
        
        <category>tasker</category>
        
        <category>android</category>
        
      </item>
    
      <item>
        <title>C++: view bit pattern</title>
        <description>&lt;p&gt;I was working on a hardware project, and I needed to be able to send a lot of data with only 12 bytes. Therefore when I needed to puzzle some bytes together, I opened up an &lt;a href=&quot;http://codepad.org/&quot;&gt;online c++ compiler&lt;/a&gt; and got to testing quickly.
In C++ you can import a library called &lt;code class=&quot;highlighter-rouge&quot;&gt;bitset&lt;/code&gt;. It is useful when you want to print out your bitpattern and see the result when you are shifting bits. Here is an example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;bitset&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;part&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;35981&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bitset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bitset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;part&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bitset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will output:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;mi&quot;&gt;11111111&lt;/span&gt;
&lt;span class=&quot;mo&quot;&gt;00001111&lt;/span&gt;
&lt;span class=&quot;mo&quot;&gt;00000000000000001000110010001101&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Sat, 03 Dec 2016 11:18:00 +0100</pubDate>
        <link>http://localhost:4000//snippets/c++/2016/12/03/C++-view-bits.html</link>
        <guid isPermaLink="true">http://localhost:4000//snippets/c++/2016/12/03/C++-view-bits.html</guid>
        
        
        <category>snippets</category>
        
        <category>c++</category>
        
      </item>
    
      <item>
        <title>Blender Script: bulk export objects</title>
        <description>&lt;p&gt;When working with blender, something you will most likely do is export your object.
If there are a lot of these objects, and you want to export your meshes into seperate .obj files, it can be a very tedious job.
The script below is one I use to make this as fast and easy as possible:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bpy&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# -----&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# optional if you want to export a folder but the folder might not exist yet&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//exports/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makedirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# -----&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#1&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'MESH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#2&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;bpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ops&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DESELECT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#3&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#4&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//exports/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;.obj&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#5&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;bpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ops&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;export_scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use_selection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use_materials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;global_scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use_smooth_groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use_normals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use_uvs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#6&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;First, we loop over all the objects in the scene &lt;code class=&quot;highlighter-rouge&quot;&gt;(1)&lt;/code&gt; and check if the object is a mesh &lt;code class=&quot;highlighter-rouge&quot;&gt;(2)&lt;/code&gt;.
If we found a mesh, we deselect everything in the scene &lt;code class=&quot;highlighter-rouge&quot;&gt;(3)&lt;/code&gt;, and select the mesh we want to export &lt;code class=&quot;highlighter-rouge&quot;&gt;(4)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then we define where the objects will be saved &lt;code class=&quot;highlighter-rouge&quot;&gt;(5)&lt;/code&gt;. In this example the objects will be saved in a folder named &lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt; (optionally add the folder).
The &lt;code class=&quot;highlighter-rouge&quot;&gt;bpy.path.abspath&lt;/code&gt; will return the absolute path and the &lt;code class=&quot;highlighter-rouge&quot;&gt;//&lt;/code&gt; is an identifier in blender that points to the current blend file.
We add the data name of the object to it, along with the &lt;code class=&quot;highlighter-rouge&quot;&gt;.obj&lt;/code&gt; extension. If the blend file is not saved, the absolute path will be empty.&lt;/p&gt;

&lt;p&gt;Last but not least, we export the obj with the settings we want &lt;code class=&quot;highlighter-rouge&quot;&gt;(6)&lt;/code&gt;. In this example, only the selection and no materials will be exported.&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Sep 2016 12:18:00 +0200</pubDate>
        <link>http://localhost:4000//snippets/blender/python/2016/09/01/blender-bulk-export.html</link>
        <guid isPermaLink="true">http://localhost:4000//snippets/blender/python/2016/09/01/blender-bulk-export.html</guid>
        
        
        <category>snippets</category>
        
        <category>blender</category>
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Terminal: check for valid json</title>
        <description>&lt;p&gt;When I manually want to check for a valid json, I have always used &lt;a href=&quot;http://jsonlint.com/&quot;&gt;jsonlint&lt;/a&gt;. I discovered that jsonlint has an npm and ruby package.
You can find the plugin here: &lt;a href=&quot;https://github.com/zaach/jsonlint&quot;&gt;npm&lt;/a&gt; or &lt;a href=&quot;https://github.com/PagerDuty/jsonlint&quot;&gt;ruby&lt;/a&gt;.
You can either install it with &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install jsonlint -g&lt;/code&gt; (for npm) or &lt;code class=&quot;highlighter-rouge&quot;&gt;gem install jsonlint&lt;/code&gt; (for ruby).&lt;/p&gt;

&lt;p&gt;You can now use it in terminal like this &lt;code class=&quot;highlighter-rouge&quot;&gt;jsonlint filepath.json&lt;/code&gt;. This will output nothing if it was successful or it will print where it went wrong.&lt;/p&gt;

&lt;p&gt;Or if you want to use it in a script that will check for the validity, here is an example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

jsonlint &lt;span class=&quot;nv&quot;&gt;$JSON_TO_VALIDATE_PATH&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#Check if json is valid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt; !&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;JSON NOT VALID
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;else
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;JSON IS VALID
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Thu, 18 Aug 2016 12:18:00 +0200</pubDate>
        <link>http://localhost:4000//snippets/terminal/ruby/npm/bash/2016/08/18/terminal-json.html</link>
        <guid isPermaLink="true">http://localhost:4000//snippets/terminal/ruby/npm/bash/2016/08/18/terminal-json.html</guid>
        
        
        <category>snippets</category>
        
        <category>terminal</category>
        
        <category>ruby</category>
        
        <category>npm</category>
        
        <category>bash</category>
        
      </item>
    
      <item>
        <title>Blender script: How to change the object data name to the object name</title>
        <description>&lt;p&gt;If you rename an object in blender, you likely didn’t change the name of the object data.
There is a difference in the name of the object itself, and the name of the object data.
When you rename one, the other isn’t automatically renamed.&lt;/p&gt;

&lt;p&gt;When you export your object to a &lt;code class=&quot;highlighter-rouge&quot;&gt;.obj&lt;/code&gt; and the object has different names, it will put these names together during export. For instance, your object is named &lt;code class=&quot;highlighter-rouge&quot;&gt;Floor&lt;/code&gt;, and the object data name is &lt;code class=&quot;highlighter-rouge&quot;&gt;Plane&lt;/code&gt;.
When the object is exported, the mesh will have the name &lt;code class=&quot;highlighter-rouge&quot;&gt;FloorPlane&lt;/code&gt;. If both names are equal, it will not duplicate the names. For example; the object name and data name are both &lt;code class=&quot;highlighter-rouge&quot;&gt;Floor&lt;/code&gt;, the exported name will be &lt;code class=&quot;highlighter-rouge&quot;&gt;Floor&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Since I don’t want to manually go over every object, I use this very small script that will change all the names to match the object name:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bpy&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will loop over all the objects &lt;code class=&quot;highlighter-rouge&quot;&gt;(1)&lt;/code&gt; in the scene and rename the data name to the object name &lt;code class=&quot;highlighter-rouge&quot;&gt;(2)&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Aug 2016 12:18:00 +0200</pubDate>
        <link>http://localhost:4000//snippets/blender/2016/08/15/blender-datanames.html</link>
        <guid isPermaLink="true">http://localhost:4000//snippets/blender/2016/08/15/blender-datanames.html</guid>
        
        
        <category>snippets</category>
        
        <category>blender</category>
        
      </item>
    
  </channel>
</rss>
